{"version":3,"sources":["assets/thumbsUp.png","components/DisplayComments.js","components/Form.js","components/Box.js","components/Vote.js","components/Nav.js","components/News.js","components/About.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","DisplayComments","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","getComments","console","log","assertThisInitialized","superagent","get","concat","redditID","then","res","setState","comment","body","createComment","inputComment","forEach","el","idx","push","react_default","a","createElement","key","src","user_id","alt","state","react","length","foo","Component","Form","changeComment","e","target","value","saveComment","updateBoxState","componentComment","preventDefault","post","catch","error","onSubmit","type","onChange","placeholder","onClick","components_DisplayComments","Box","updateState","dataObj","_this2","react_router_dom","to","react_router","exact","path","component","components_Form","Vote","increaseVote","valueToModify","currentNumberOfVote","modifiedValue","parseInt","className","thumbsUp","Nav","News","useEffect","fetchItems","_useState","useState","_useState2","slicedToArray","item","setItem","_ref","asyncToGenerator","regenerator_default","mark","_callee","data","items","wrap","_context","prev","next","fetch","sent","json","stop","apply","arguments","components_Nav","map","components_Vote","thumbnailurl","title","components_Box","id","About","Home","App","Boolean","window","location","hostname","match","ReactDOM","render","components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e364eb21.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/thumbsUp.60707ce4.png\";","import React, { Component, Fragment } from \"react\";\nimport superagent from \"superagent\";\n\nclass DisplayComments extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      comment: null\n    };\n  }\n\n  getComments = () => {\n    console.log(this);\n    superagent\n      .get(\n        `https://warm-cove-20229.herokuapp.com/comments?id=${\n          this.props.redditID\n        }`\n      )\n      .then(res => {\n        this.setState({ comment: res.body });\n      });\n  };\n\n  createComment = inputComment => {\n    let comment = [];\n    inputComment.forEach((el, idx) => {\n      comment.push(\n        <li key={idx}>\n          <img\n            src={`https://api.adorable.io/avatars/90/${el.user_id}.png`}\n            alt=\"auto generated avatar\"\n          />\n          <p>{el.comment}</p>\n        </li>\n      );\n    });\n    return comment;\n  };\n\n  render() {\n    if (this.state.comment === null) {\n      this.getComments();\n      return (\n        <Fragment>\n          <p>Loading</p>\n        </Fragment>\n      );\n    }\n\n    if (this.state.comment.length === 0) {\n      return (\n        <Fragment>\n          <p>No comment!</p>\n        </Fragment>\n      );\n    }\n\n    let foo = this.createComment(this.state.comment);\n    return (\n      <Fragment>\n        <ul>\n          {foo}\n          {/* <img src={`https://api.adorable.io/avatars/90/${this.props.}.png`}/>\n          <li>{this.state.comment && this.state.comment.map((el)=> el.comment)}</li> */}\n        </ul>\n      </Fragment>\n    );\n  }\n}\n\nexport default DisplayComments;\n","import React, { Component, Fragment } from \"react\";\nimport DisplayComments from \"./DisplayComments\";\nimport superagent from \"superagent\";\n\nclass Form extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      comment: [],\n      componentComment: \"\"\n    };\n  }\n\n  changeComment = e => {\n    let comment = e.target.value;\n    this.setState({\n      comment\n    });\n  };\n\n  saveComment = e => {\n    this.props.updateBoxState({\n      comment: \"\",\n      componentComment: this.state.comment\n    });\n    e.preventDefault();\n    superagent\n      .post(\n        `https://warm-cove-20229.herokuapp.com/comments?id=${\n          this.props.redditID\n        }&message=${this.state.comment}`\n      )\n      .then(res => console.log(res)) //TODO: Draw Updated Comments\n      .catch(error => console.error(error));\n  };\n\n  render() {\n    return (\n      <Fragment>\n        <form onSubmit={this.saveComment}>\n          <input\n            type=\"text\"\n            value={this.state.comment}\n            onChange={this.changeComment}\n            placeholder=\"Type Comment Here\"\n          />\n          <button type=\"submit\" onClick={this.saveComment}>\n            Submit\n          </button>\n        </form>\n        <DisplayComments comment={this.props.componentComment} />\n      </Fragment>\n    );\n  }\n}\n\nexport default Form;\n","import React, { Component, Fragment } from \"react\";\nimport { BrowserRouter, Route, Link } from \"react-router-dom\";\nimport DisplayComments from \"./DisplayComments\";\nimport Form from \"./Form\";\n\nclass Box extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {};\n  }\n\n  updateState = dataObj => {\n    this.setState(dataObj);\n  };\n\n  render() {\n    return (\n      <Fragment>\n        <BrowserRouter>\n          <Link to=\"/displaycomment\">Show Comments</Link>\n          <Route\n            exact\n            path=\"/displaycomment\"\n            component={() => (\n              <DisplayComments comment={this.state.componentComment} redditID = {this.props.redditID} />\n            )}\n          />\n\n          <Link to=\"/addcomment\">Add Comment</Link>\n          <Route\n            exact\n            path=\"/addcomment\"\n            component={() => (\n              <Form\n                updateBoxState={this.updateState}\n                componentComment={this.state.componentComment}\n                redditID={this.props.redditID}\n              />\n            )}\n          />\n        </BrowserRouter>\n      </Fragment>\n    );\n  }\n}\n\nexport default Box;\n","import React, { Component, Fragment } from \"react\";\nimport thumbsUp from '../assets/thumbsUp.png';\n\nclass Vote extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentNumberOfVote: \"0\"\n    };\n  }\n\n  increaseVote = () => {\n    let valueToModify = this.state.currentNumberOfVote;\n    let modifiedValue = parseInt(valueToModify, 10) + 1;\n    this.setState({ currentNumberOfVote: modifiedValue });\n  };\n  render() {\n    return (\n      <Fragment>\n        <section className=\"vote\">\n          <h3>{this.state.currentNumberOfVote}</h3>\n          <img src={thumbsUp} onClick={this.increaseVote} />\n        </section>\n      </Fragment>\n    );\n  }\n}\n\nexport default Vote;\n","import React, { Component, Fragment } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nclass Nav extends Component {\n  render() {\n    return (\n      <Fragment>\n        <nav>\n          <ul className=\"nav-links\">\n            <Link to=\"/News\">\n              <li>News</li>\n            </Link>\n            <Link to=\"/About\">\n              <li>About</li>\n            </Link>\n          </ul>\n        </nav>\n      </Fragment>\n    );\n  }\n}\n\nexport default Nav;\n","import React, { Fragment, useState, useEffect } from \"react\";\nimport Box from \"./Box\";\nimport Vote from \"./Vote\";\nimport Nav from \"./Nav\";\nimport { Link } from 'react-router-dom';\n\n\nfunction News() {\n  useEffect(() => {\n    fetchItems();\n  }, []);\n\n  const [item, setItem] = useState([]);\n\n  const fetchItems = async () => {\n    const data = await fetch(\"https://warm-cove-20229.herokuapp.com/news\");\n\n    const items = await data.json();\n    setItem(items);\n  };\n\n  return (\n    <Fragment>\n      <Nav />\n      <section className=\"news\">\n        <ul>\n          {item.map((el, key) => (\n            <li key={key}>\n              <Vote />\n              <img className=\"thumbnail\" src={item[key].thumbnailurl}></img>\n              <h4>{item[key].title}</h4> <Box redditID={item[key].id} />\n              \n            </li>\n          ))}\n        </ul>\n      </section>\n    </Fragment>\n  );\n}\n\nexport default News;\n","import React, { Component, Fragment } from \"react\";\n\nclass About extends Component {\n  state = {};\n  render() {\n    return (\n      <Fragment>\n        <h3>The team</h3>\n        <p>hello</p>\n      </Fragment>\n    );\n  }\n}\n\nexport default About;\n","import React, { Component, Fragment } from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport News from \"./News\";\nimport About from \"./About\";\nimport Nav from \"./Nav\";\n\nfunction Home() {\n  return (\n    <Fragment>\n      <section className=\"hero\">\n        <div className=\"inner\">\n          <h1>Sacred Toast</h1>\n          <h2>Anime News Aggregator</h2>\n          <Nav />\n        </div>\n      </section>\n    </Fragment>\n  );\n}\n\nclass App extends Component {\n  render() {\n    return (\n      <Fragment>\n        <Router>\n          <Switch>\n            <Route path=\"/\" exact component={Home} />\n            <Route path=\"/about\" component={About} />\n            <Route path=\"/news\" exact component={News} />\n            {/* <Route path=\"/news/thunbnailurl\" component={this.props.item[key].thumbnailurl}></Route> */}\n          </Switch>\n        </Router>\n      </Fragment>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"../src/components/App\";\nimport \"./scss/core.scss\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}